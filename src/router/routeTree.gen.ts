/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TrucksImport } from './routes/trucks'
import { Route as DashboardImport } from './routes/dashboard'
import { Route as IndexImport } from './routes/index'
import { Route as TrucksAddImport } from './routes/trucks_.add'
import { Route as TrucksEditTruckIdImport } from './routes/trucks_.edit.$truckId'
import { Route as TrucksDetailsTruckIdImport } from './routes/trucks_.details.$truckId'

// Create/Update Routes

const TrucksRoute = TrucksImport.update({
  path: '/trucks',
  getParentRoute: () => rootRoute,
} as any)

const DashboardRoute = DashboardImport.update({
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const TrucksAddRoute = TrucksAddImport.update({
  path: '/trucks/add',
  getParentRoute: () => rootRoute,
} as any)

const TrucksEditTruckIdRoute = TrucksEditTruckIdImport.update({
  path: '/trucks/edit/$truckId',
  getParentRoute: () => rootRoute,
} as any)

const TrucksDetailsTruckIdRoute = TrucksDetailsTruckIdImport.update({
  path: '/trucks/details/$truckId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/trucks': {
      id: '/trucks'
      path: '/trucks'
      fullPath: '/trucks'
      preLoaderRoute: typeof TrucksImport
      parentRoute: typeof rootRoute
    }
    '/trucks/add': {
      id: '/trucks/add'
      path: '/trucks/add'
      fullPath: '/trucks/add'
      preLoaderRoute: typeof TrucksAddImport
      parentRoute: typeof rootRoute
    }
    '/trucks/details/$truckId': {
      id: '/trucks/details/$truckId'
      path: '/trucks/details/$truckId'
      fullPath: '/trucks/details/$truckId'
      preLoaderRoute: typeof TrucksDetailsTruckIdImport
      parentRoute: typeof rootRoute
    }
    '/trucks/edit/$truckId': {
      id: '/trucks/edit/$truckId'
      path: '/trucks/edit/$truckId'
      fullPath: '/trucks/edit/$truckId'
      preLoaderRoute: typeof TrucksEditTruckIdImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  DashboardRoute,
  TrucksRoute,
  TrucksAddRoute,
  TrucksDetailsTruckIdRoute,
  TrucksEditTruckIdRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.ts",
      "children": [
        "/",
        "/dashboard",
        "/trucks",
        "/trucks/add",
        "/trucks/details/$truckId",
        "/trucks/edit/$truckId"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/dashboard": {
      "filePath": "dashboard.ts"
    },
    "/trucks": {
      "filePath": "trucks.ts"
    },
    "/trucks/add": {
      "filePath": "trucks_.add.ts"
    },
    "/trucks/details/$truckId": {
      "filePath": "trucks_.details.$truckId.ts"
    },
    "/trucks/edit/$truckId": {
      "filePath": "trucks_.edit.$truckId.ts"
    }
  }
}
ROUTE_MANIFEST_END */
